{"version":3,"sources":["components/hoc-helpers/with-slider-data.js","service/index.js","service/weather-api.js","components/hoc-helpers/with-chart-data.js","components/slider/index.js","components/slider/slider.js","components/sliders/pressure-slider.js","components/sliders/temperature-slider.js","components/chart/index.js","components/chart/chart.js","components/pages/forecast-page.js","components/pages/static-page.js","components/app/app.js","components/app/index.js","serviceWorker.js","index.js"],"names":["withSliderData","View","data","props","react_default","a","createElement","Object","assign","WeatherApiService","forecastData","request","days","day","amount","this","withChartData","Chart","_Component","_temp","_getPrototypeOf2","_this","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","forecastService","getForecastData","getForecast","then","setState","catch","err","console","error","inherits","createClass","key","value","prevProps","pressure","temperature","getChanceOfRain","score","Math","log","mean","min","max","upperBound","_this2","_this$props","spin","tip","chartData","lower","upper","map","el","idx","i","element","x","y","forEach","item","push","transformData","Component","SliderElement","average","getValue","_this$props$data","title","measure","cardTitle","card","className","slider","onChange","defaultValue","tooltipVisible","_ref","lib","axes","margin","top","right","bottom","left","interpolate","width","height","yDomainRange","ForecastPage","getPressure","getTemperature","_this$state","row","type","justify","col","span","pressure_slider","temperature_slider","components_chart","StaticPage","Header","Layout","Content","Footer","App","BrowserRouter","layout","menu","theme","mode","defaultSelectedKeys","Item","Link","to","Route","path","exact","component","style","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","components_app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b446c77.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst withSliderData = (View, data) => {\r\n  return (props) => {\r\n    return (\r\n      <View {...props} data={data} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default withSliderData;","import WeatherApiService from './weather-api';\r\nexport default WeatherApiService;","export default class WeatherApiService {\r\n\r\n  forecastData = {\r\n  \"request\": \"Amount of rainfall by day\",\r\n  \"days\": [{\r\n    \"day\": 1,\r\n    \"amount\": 50\r\n  }, {\r\n    \"day\": 2,\r\n    \"amount\": 10\r\n  }, {\r\n    \"day\": 3,\r\n    \"amount\": 10\r\n  }, {\r\n    \"day\": 4,\r\n    \"amount\": 150\r\n  }, {\r\n    \"day\": 5,\r\n    \"amount\": 130\r\n  }, {\r\n    \"day\": 6,\r\n    \"amount\": 45\r\n  }, {\r\n    \"day\": 7,\r\n    \"amount\": 10\r\n  }]\r\n}\r\n\r\n// just for fun this function is async\r\n  async getForecast() {\r\n    return await this.forecastData.days;\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport WeatherApiService from '../../service';\r\nimport { Spin } from 'antd';\r\n\r\nconst withChartData = (Chart) => {\r\n  return class extends Component {\r\n    state = {\r\n      data: null\r\n    }\r\n\r\n    forecastService = new WeatherApiService();\r\n\r\n    componentDidMount() {\r\n      this.getForecastData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.pressure !== prevProps.pressure || this.props.temperature !== prevProps.temperature) {\r\n        this.getChanceOfRain();\r\n      }\r\n    }\r\n\r\n    getForecastData = () => {\r\n      this.forecastService.getForecast()\r\n        .then((data) => {\r\n          this.setState({ data })\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        })\r\n    }\r\n\r\n    getChanceOfRain(pressure, temperature, amount) {\r\n      const score = Math.log(amount + 1) * Math.log(pressure - 929) * Math.log(temperature - -9);\r\n      const mean = Math.min(Math.max(score, 0), 100)\r\n      const upperBound = Math.min(1.5 * mean, 100);\r\n      const lowerBound = Math.max(0.5 * mean, 0);\r\n      return [lowerBound, mean, upperBound];\r\n    }\r\n\r\n    render() {\r\n      const { data } = this.state;\r\n      const { temperature, pressure } = this.props;\r\n      if (!data) return <Spin tip=\"Loading...\" />\r\n\r\n      const transformData = (data) => {\r\n        let lower = [];\r\n        let mean = [];\r\n        let upper = [];\r\n\r\n        data.map((el, idx) => {\r\n          let i = ++idx;\r\n          return this.getChanceOfRain(+pressure, +temperature, el.amount).map(element => {\r\n            return { x: i, y: element }\r\n          });\r\n        }).forEach(el => {\r\n          el.forEach((item, idx) => {\r\n            if (idx === 0) lower.push(item);\r\n            if (idx === 1) mean.push(item);\r\n            if (idx === 2) upper.push(item);\r\n          });\r\n        });\r\n        return [lower, mean, upper];\r\n      }\r\n\r\n      const chartData = transformData(data);\r\n\r\n      return (\r\n        <Chart {...this.props} data={chartData} />\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default withChartData;","import SliderElement from './slider';\r\nexport default SliderElement;","import React, { Component } from 'react';\r\nimport { Card, Slider } from 'antd';\r\nimport './slider.scss';\r\n\r\n\r\nexport default class SliderElement extends Component {\r\n\r\n  state = {\r\n    average: (this.props.data.min + this.props.data.max) / 2\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getValue(this.state.average);\r\n  }\r\n\r\n  render() {\r\n    const { min, max, title, measure } = this.props.data;\r\n    const cardTitle = <h2>{`${title} [${measure}]`}</h2>;\r\n\r\n    return (\r\n      <Card className=\"slider_card\" >\r\n        {cardTitle}\r\n        <Slider\r\n          onChange={this.props.getValue}\r\n          defaultValue={this.state.average}\r\n          min={min}\r\n          max={max}\r\n          tooltipVisible />\r\n      </Card>\r\n    )\r\n  }\r\n}","import { withSliderData } from '../hoc-helpers';\r\nimport SliderElement from '../slider';\r\n\r\nconst sliderData = {\r\n  min: 970,\r\n  max: 1030,\r\n  title: 'Pressure',\r\n  measure: 'hPa'\r\n}\r\n\r\nexport default withSliderData(SliderElement, sliderData);\r\n\r\n","import { withSliderData } from '../hoc-helpers';\r\nimport SliderElement from '../slider';\r\n\r\nconst sliderData = {\r\n  min: 10,\r\n  max: 35,\r\n  title: 'Temperature',\r\n  measure: '℃'\r\n}\r\n\r\nexport default withSliderData(SliderElement, sliderData);","import Chart from './chart';\r\nexport default Chart;","import React from 'react';\r\nimport { AreaChart } from 'react-easy-chart';\r\nimport { Card } from 'antd';\r\nimport { withChartData } from '../hoc-helpers';\r\n\r\nimport './chart.scss';\r\n\r\nconst Chart = ({ data }) => {\r\n  const title = <h2>Chance of Rain</h2>\r\n\r\n  const chart = (\r\n    <Card className=\"forecast-chart\">\r\n      {title}\r\n      <AreaChart\r\n        axes\r\n        margin={{ top: 50, right: 10, bottom: 50, left: 50 }}\r\n        interpolate={'cardinal'}\r\n        width={1100}\r\n        height={400}\r\n        yDomainRange={[0, 100]}\r\n        data={data}\r\n      />\r\n    </Card>\r\n  );\r\n  return chart\r\n}\r\n\r\nexport default withChartData(Chart);","import React, { Component } from 'react';\r\nimport { PressureSlider, TemperatureSlider } from '../sliders';\r\nimport Chart from '../chart';\r\nimport { Row, Col } from 'antd';\r\n\r\nexport default class ForecastPage extends Component {\r\n\r\n  state = {\r\n    pressure: null,\r\n    temperature: null\r\n  }\r\n\r\n  getPressure = (pressure) => {\r\n    this.setState({ pressure });\r\n  }\r\n\r\n  getTemperature = (temperature) => {\r\n    this.setState({ temperature });\r\n  }\r\n\r\n  render() {\r\n    const { pressure, temperature } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <Row type=\"flex\" justify=\"space-between\" className=\"sliders-row\">\r\n          <Col span={10}>\r\n            <PressureSlider getValue={this.getPressure} />\r\n          </Col>\r\n          <Col span={10}>\r\n            <TemperatureSlider getValue={this.getTemperature} />\r\n          </Col>\r\n        </Row>\r\n        <Row type=\"flex\" justify=\"center\" className=\"forecast-row\">\r\n          <Col>\r\n            <Chart pressure={pressure} temperature={temperature} />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, Card } from 'antd';\r\n\r\nexport default class StaticPage extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Row type=\"flex\" justify=\"space-between\" className=\"sliders-row\">\r\n          <Col>\r\n            <Card>\r\n              <h1>Forecast Single Page Application</h1>\r\n\r\n              <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reprehenderit ipsam qui at id voluptates deleniti delectus optio asperiores a eos.</p>\r\n              <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Necessitatibus, aliquam velit eos beatae possimus perferendis amet deleniti quisquam labore ipsam a optio delectus! Sequi, magni veniam quibusdam quidem dicta error possimus unde fugit praesentium facilis! Tempora nihil iusto voluptatibus harum autem iure labore vel illo, commodi repudiandae hic at! Odio laudantium ullam temporibus voluptatibus. Voluptates magni sit itaque vero error a in cumque inventore deleniti, quibusdam nihil perspiciatis id accusantium accusamus harum incidunt amet enim velit eos et labore ratione corporis. Enim, libero ullam nostrum debitis vel aliquid perspiciatis, suscipit provident quibusdam nemo quasi minima. Quis adipisci sit optio earum?</p>\r\n              <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Possimus laborum est culpa officia nihil corporis harum, eos ex ducimus assumenda. Quae ipsa optio fugiat expedita totam. Quod nisi alias sint, nihil, repellat a eum distinctio voluptatum non, dicta provident saepe obcaecati asperiores? Id reprehenderit quaerat voluptate fuga tenetur quisquam odit vero maiores culpa sit quae fugit similique cum, fugiat placeat iure unde quod omnis delectus vel iusto tempora velit aut. Magni sunt voluptas delectus, beatae nesciunt minima laborum tenetur reprehenderit repellat illo hic mollitia provident quisquam facilis officiis, laboriosam labore dolorem? Dolorum necessitatibus placeat at modi repellat voluptate quasi tenetur est perferendis exercitationem consequuntur sequi excepturi magnam cumque minus, sunt itaque sapiente cupiditate neque amet? Incidunt, delectus veritatis vitae consequatur quam expedita laborum id officiis ducimus consequuntur quae iste exercitationem at molestiae iure repellendus? Dicta cum unde esse molestias quasi deserunt voluptas architecto odio numquam illum? Perferendis, reiciendis facilis voluptatibus beatae iure nobis maiores at pariatur tempore, exercitationem ipsa obcaecati est cupiditate ducimus. Magni laboriosam nemo perferendis doloremque vel. Iste iusto perferendis quam itaque eaque commodi similique corrupti, est error laboriosam dolor reprehenderit inventore asperiores autem voluptatum neque omnis, maxime magnam accusamus debitis ut, ducimus facilis delectus ipsa? Voluptatem harum dolor voluptates. Repellendus, dignissimos magnam. Nobis dolor maxime, voluptates aperiam sed blanditiis error ipsam esse! Ab consectetur, porro quo dolorum et repellendus dolor dicta dolorem accusantium unde aliquid sapiente quaerat optio corporis accusamus qui eum quia sed nostrum? Officiis dolores ut, ipsum, at magnam molestiae iure a modi asperiores alias facere ratione maxime quas itaque repudiandae harum ex enim odit fuga. Rem labore qui, quibusdam ullam aliquam possimus voluptatibus voluptatem quaerat quo, veritatis accusamus? Perspiciatis nulla ipsum quam sequi recusandae eligendi vitae fugiat repellat labore et fuga reiciendis sapiente dolorem officiis doloribus suscipit facere reprehenderit necessitatibus cumque maxime, porro voluptate, sint odio. Sed doloribus culpa veritatis beatae dolorem odit eius unde nostrum molestias rerum? Est alias voluptatibus ullam veritatis, ipsum rem beatae eum et vitae modi, facere odio minus ab eaque! Dolorem minima modi itaque ipsum, sapiente cum dolore adipisci rerum eum sed velit officiis beatae, unde laborum deleniti voluptas molestiae nostrum tempora aspernatur quo dicta totam impedit quae! Cumque minus quaerat ducimus corporis inventore necessitatibus doloremque explicabo reprehenderit iusto beatae unde voluptas, provident ab laborum sint voluptate distinctio, veritatis nemo possimus aspernatur? Iste soluta iusto molestiae nam enim ipsum! Eius impedit doloremque unde quae dolores, rerum, ducimus nobis fuga amet voluptatum quis illum? Eaque perspiciatis sapiente sed nemo aliquid amet saepe harum labore cupiditate ut sunt mollitia suscipit incidunt quo fugit est, non recusandae odio quidem assumenda? Magni sit, voluptatem dolores minima velit dicta. Excepturi saepe, quisquam eos beatae et fugiat est nihil aperiam nesciunt molestiae maxime illum voluptatibus minima id optio itaque sit dolor vitae repudiandae omnis qui accusamus. Assumenda accusantium laboriosam natus ullam nemo soluta atque, dolores adipisci accusamus rerum repudiandae veniam delectus? Sunt delectus veritatis non voluptatem inventore impedit ratione laboriosam enim similique? Vitae cupiditate earum molestias provident pariatur expedita vero sequi accusamus. Fuga, distinctio iure!</p>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport { ForecastPage, StaticPage } from '../pages';\r\nimport { Layout, Menu } from 'antd';\r\nimport './app.scss';\r\nconst { Header, Content, Footer } = Layout;\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Layout className=\"layout\">\r\n        <Header>\r\n          <div className=\"logo\" />\r\n          <Menu\r\n            className=\"menu\"\r\n            theme=\"dark\"\r\n            mode=\"horizontal\"\r\n            defaultSelectedKeys={['1']}>\r\n            <Menu.Item key=\"1\">\r\n              <Link to=\"/\">Intro</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n              <Link to=\"/forecast\">Forecast</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Header>\r\n        <Content>\r\n          <div className=\"content\">\r\n            <div className=\"app\">\r\n              <Route path=\"/\" exact component={StaticPage} />\r\n              <Route path=\"/forecast\" component={ForecastPage} />\r\n            </div>\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>\r\n          ForecastApp ©2019 Created by Sergey Chuprina\r\n        </Footer>\r\n      </Layout>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import App from './app';\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}